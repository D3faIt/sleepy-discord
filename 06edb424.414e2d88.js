(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{364:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var n=r(0),c=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=c.a.createContext({}),p=function(e){var t=c.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},y=c.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),y=n,b=u["".concat(o,".").concat(y)]||u[y]||d[y]||a;return r?c.a.createElement(b,i(i({ref:t},l),{},{components:r})):c.a.createElement(b,i({ref:t},l))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var l=2;l<a;l++)o[l]=r[l];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},81:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(3),c=r(7),a=(r(0),r(364)),o={title:"SleepyDiscord::AuditLogKeyData"},i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",id:"reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",isDocsHomePage:!1,title:"SleepyDiscord::AuditLogKeyData",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::AuditLog",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_audit_log"},next:{title:"SleepyDiscord::BaseAudioOutput",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_audio_output"}},s=[{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using ObjectChanged",id:"using-objectchanged",children:[]},{value:"using Type",id:"using-type",children:[]}]}],l={toc:s};function p(e){var t=e.components,r=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null," ",Object(a.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(a.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"template <class _ObjectChanged ,\nclass _Type >\nstruct SleepyDiscord::AuditLogKeyData;\n")),Object(a.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(a.b)("h3",{id:"using-objectchanged"},"using ObjectChanged"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AuditLogKeyData< _ObjectChanged, _Type >::ObjectChanged =  _ObjectChanged;\n")),Object(a.b)("h3",{id:"using-type"},"using Type"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AuditLogKeyData< _ObjectChanged, _Type >::Type =  _type;\n")),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on 30 April 2021 at 23:39:25 UTC"))}p.isMDXComponent=!0}}]);