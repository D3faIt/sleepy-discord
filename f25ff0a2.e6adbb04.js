(window.webpackJsonp=window.webpackJsonp||[]).push([[294],{364:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return s}));var r=n(3),c=n(7),o=(n(0),n(393)),a={title:"SleepyDiscord::Autocomplete"},i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_autocomplete",id:"reference/Classes/struct_sleepy_discord_1_1_autocomplete",isDocsHomePage:!1,title:"SleepyDiscord::Autocomplete",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_autocomplete.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_autocomplete",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_autocomplete",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::AuditLogKeyData",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data"},next:{title:"SleepyDiscord::BaseAudioOutput",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_audio_output"}},u=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Autocomplete",id:"function-autocomplete",children:[]},{value:"function Autocomplete",id:"function-autocomplete-1",children:[]},{value:"function Autocomplete",id:"function-autocomplete-2",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable choices",id:"variable-choices",children:[]}]}],l={toc:u};function s(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Inherits from ",Object(o.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(o.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(o.b)("h3",{id:"function-autocomplete"},"function Autocomplete"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"Autocomplete() =default\n")),Object(o.b)("h3",{id:"function-autocomplete-1"},"function Autocomplete"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"Autocomplete(\n    json::Value & json\n)\n")),Object(o.b)("h3",{id:"function-autocomplete-2"},"function Autocomplete"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"inline Autocomplete(\n    const nonstd::string_view & json\n)\n")),Object(o.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair< json::ContainerTypeHelper > &::, "", ::REQUIRIED_FIELD \n)\n')),Object(o.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(o.b)("h3",{id:"variable-choices"},"variable choices"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< AppCommand::Option::Choice > choices;\n")),Object(o.b)("hr",null),Object(o.b)("p",null,"Updated on 26 November 2021 at 18:07:03 UTC"))}s.isMDXComponent=!0},393:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),c=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=c.a.createContext({}),s=function(e){var t=c.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},b=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=s(n),b=r,m=p["".concat(a,".").concat(b)]||p[b]||d[b]||o;return n?c.a.createElement(m,i(i({ref:t},l),{},{components:n})):c.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=b;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var l=2;l<o;l++)a[l]=n[l];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);