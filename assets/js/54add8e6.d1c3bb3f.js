"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[5045],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,_=u["".concat(i,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(_,o(o({ref:t},p),{},{components:n})):a.createElement(_,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4621:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),o=["components"],c={title:"SleepyDiscord::InteractionAppCommandCallbackData"},i=void 0,s={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_interaction_app_command_callback_data",id:"reference/Classes/struct_sleepy_discord_1_1_interaction_app_command_callback_data",title:"SleepyDiscord::InteractionAppCommandCallbackData",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_app_command_callback_data.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_interaction_app_command_callback_data",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_app_command_callback_data",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::InteractionAppCommandCallbackData"},sidebar:"Reference",previous:{title:"SleepyDiscord::Interaction::Response",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response"},next:{title:"SleepyDiscord::InteractionData",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_data"}},p=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum Flags",id:"enum-flags",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function InteractionAppCommandCallbackData",id:"function-interactionappcommandcallbackdata",children:[],level:3},{value:"function InteractionAppCommandCallbackData",id:"function-interactionappcommandcallbackdata-1",children:[],level:3},{value:"function InteractionAppCommandCallbackData",id:"function-interactionappcommandcallbackdata-2",children:[],level:3},{value:"function empty",id:"function-empty",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable tts",id:"variable-tts",children:[],level:3},{value:"variable flags",id:"variable-flags",children:[],level:3}],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Inherits from ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params"},"SleepyDiscord::EditWebhookParams"),", ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,l.kt)("h2",{id:"inherited-members"},"inherited members"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params"},"SleepyDiscord::EditWebhookParams"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"std::string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params#variable-content"},"content")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"std::vector< ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_embed"},"Embed")," >"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params#variable-embeds"},"embeds")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions"},"AllowedMentions")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params#variable-allowedmentions"},"allowedMentions")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"std::vector< std::shared_ptr< ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"BaseComponent")," > >"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params#variable-components"},"components")))))),(0,l.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,l.kt)("h3",{id:"enum-flags"},"enum Flags"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"NONE"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Ephemeral"),(0,l.kt)("td",{parentName:"tr",align:null},"1 << 6"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,l.kt)("h3",{id:"function-interactionappcommandcallbackdata"},"function InteractionAppCommandCallbackData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"InteractionAppCommandCallbackData() =default\n")),(0,l.kt)("h3",{id:"function-interactionappcommandcallbackdata-1"},"function InteractionAppCommandCallbackData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"InteractionAppCommandCallbackData(\n    json::Value & json\n)\n")),(0,l.kt)("h3",{id:"function-interactionappcommandcallbackdata-2"},"function InteractionAppCommandCallbackData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"inline InteractionAppCommandCallbackData(\n    const nonstd::string_view & json\n)\n")),(0,l.kt)("h3",{id:"function-empty"},"function empty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"inline const bool empty() const\n")),(0,l.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),(0,l.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,l.kt)("h3",{id:"variable-tts"},"variable tts"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool tts = false;\n")),(0,l.kt)("h3",{id:"variable-flags"},"variable flags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"enum SleepyDiscord::InteractionAppCommandCallbackData::Flags flags = Flags::NONE;\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on  2 January 2022 at 01:46:00 UTC"))}u.isMDXComponent=!0}}]);