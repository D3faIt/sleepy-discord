"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[4298],{3905:function(e,t,r){r.d(t,{Zo:function(){return i},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},i=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},_=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),_=c(r),d=a,m=_["".concat(p,".").concat(d)]||_[d]||u[d]||s;return r?n.createElement(m,o(o({ref:t},i),{},{components:r})):n.createElement(m,o({ref:t},i))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=_;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<s;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}_.displayName="MDXCreateElement"},9011:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return i},default:function(){return _}});var n=r(3117),a=r(102),s=(r(7294),r(3905)),o=["components"],l={title:"SleepyDiscord::json::EnumTypeHelper"},p=void 0,c={unversionedId:"reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper",id:"reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper",title:"SleepyDiscord::json::EnumTypeHelper",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::json::EnumTypeHelper"},sidebar:"Reference",previous:{title:"SleepyDiscord::json::EmptyFunction",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_empty_function"},next:{title:"SleepyDiscord::json::FromContainerFunction",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_from_container_function"}},i=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Detailed Description",id:"detailed-description",children:[],level:2}],u={toc:i};function _(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,s.kt)("p",null,"Inherits from ",(0,s.kt)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper"},"SleepyDiscord::json::BaseEnumTypeHelper< Type, GetDefault< Type >, GetEnumBaseType< Type >::Value >")),(0,s.kt)("h2",{id:"inherited-members"},"inherited members"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper"},"SleepyDiscord::json::BaseEnumTypeHelper< Type, GetDefault< Type >, GetEnumBaseType< Type >::Value >"))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Type"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper#function-totype"},"toType")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Value"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper#function-fromtype"},"fromType")),"(const Type & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Value"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper#function-fromtype"},"fromType")),"(const Type & value, Value::AllocatorType & )")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"bool"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper#function-empty"},"empty")),"(const Type & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"bool"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper#function-istype"},"isType")),"(const Value & value)")))),(0,s.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\nstruct SleepyDiscord::json::EnumTypeHelper;\n")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Updated on  2 January 2022 at 00:25:08 UTC"))}_.isMDXComponent=!0}}]);