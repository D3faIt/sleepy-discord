"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[5070],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return _}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(r),_=l,y=d["".concat(s,".").concat(_)]||d[_]||u[_]||a;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function _(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7094:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var n=r(3117),l=r(102),a=(r(7294),r(3905)),o=["components"],i={title:"SleepyDiscord::GetEnumBaseType"},s=void 0,c={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",id:"reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",title:"SleepyDiscord::GetEnumBaseType",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::GetEnumBaseType"},sidebar:"Reference",previous:{title:"SleepyDiscord::GetDefault< UnavailableServer::AvailableFlag >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_get_default_3_01_unavailable_server_1_1_available_flag_01_4"},next:{title:"SleepyDiscord::GetEnumBaseType< AllowedMentions::MentionReplierFlag >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type_3_01_allowed_mentions_1_1_mention_replier_flag_01_4"}},p=[{value:"Detailed Description",id:"detailed-description",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Value",id:"using-value",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,r=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,a.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\nstruct SleepyDiscord::GetEnumBaseType;\n")),(0,a.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,a.kt)("h3",{id:"using-value"},"using Value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::GetEnumBaseType< Type >::Value =  int64_t;\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 13 April 2022 at 18:39:59 UTC"))}d.isMDXComponent=!0}}]);