"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[4577],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return u}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),i=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=i(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=i(r),u=n,_=m["".concat(o,".").concat(u)]||m[u]||p[u]||s;return r?a.createElement(_,l(l({ref:t},d),{},{components:r})):a.createElement(_,l({ref:t},d))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,l=new Array(s);l[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var i=2;i<s;i++)l[i]=r[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8475:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return o},metadata:function(){return i},toc:function(){return d},default:function(){return m}});var a=r(3117),n=r(102),s=(r(7294),r(3905)),l=["components"],c={title:"SleepyDiscord::EditMessageParams"},o=void 0,i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_edit_message_params",id:"reference/Classes/struct_sleepy_discord_1_1_edit_message_params",title:"SleepyDiscord::EditMessageParams",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_edit_message_params.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_edit_message_params",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_message_params",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::EditMessageParams"},sidebar:"Reference",previous:{title:"SleepyDiscord::Connection",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_connection"},next:{title:"SleepyDiscord::EditWebhookParams",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params"}},d=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function std::tuple_cat",id:"function-stdtuple_cat",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable messageID",id:"variable-messageid",children:[],level:3},{value:"variable flags",id:"variable-flags",children:[],level:3},{value:"variable attachments",id:"variable-attachments",children:[],level:3}],level:2}],p={toc:d};function m(e){var t=e.components,r=(0,n.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Inherits from ",(0,s.kt)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< EditMessageParams >"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,s.kt)("h2",{id:"inherited-members"},"inherited members"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< EditMessageParams >"))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"JSONStructStart"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#function-stdmake_tuple"},"std::make_tuple")),'(json::pair &::, "", ::OPTIONAL_FIELD , json::pair &::, "", ::OPTIONAL_FIELD , json::pair &::, "", ::OPTIONAL_FIELD , json::pair< ',(0,s.kt)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_container_type_helper"},"json::ContainerTypeHelper"),' > &::, "", ::OPTIONAL_FIELD )')))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< EditMessageParams >"))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",(0,s.kt)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_channel"},"Channel")," >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-channelid"},"channelID")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-content"},"content")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_embed"},"Embed")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-embed"},"embed")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions"},"AllowedMentions")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-allowedmentions"},"allowedMentions")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::vector< std::shared_ptr< ",(0,s.kt)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"BaseComponent")," > >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-components"},"components")))))),(0,s.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,s.kt)("h3",{id:"function-stdtuple_cat"},"function std::tuple_cat"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::tuple_cat(\n    MessageParams< EditMessageParams >::JSONStruct ,\n    std::make_tuple(json::pair< json::EnumTypeHelper >(&EditMessageParams::flags, "flags", json::OPTIONAL_FIELD), json::pair< json::ContainerTypeHelper >(&EditMessageParams::attachments, "attachments", json::OPTIONAL_FIELD)) \n)\n')),(0,s.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,s.kt)("h3",{id:"variable-messageid"},"variable messageID"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Message > messageID;\n")),(0,s.kt)("h3",{id:"variable-flags"},"variable flags"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"Message::Flags flags = Message::Flags::DEFAULT;\n")),(0,s.kt)("h3",{id:"variable-attachments"},"variable attachments"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Attachment > attachments;\n")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Updated on  2 January 2022 at 00:25:08 UTC"))}m.isMDXComponent=!0}}]);