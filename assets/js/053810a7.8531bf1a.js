"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[7547],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),f=a,m=d["".concat(i,".").concat(f)]||d[f]||u[f]||c;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<c;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4131:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=t(3117),a=t(102),c=(t(7294),t(3905)),o=["components"],s={title:"sleepy_discord/stage_instance.cpp"},i=void 0,l={unversionedId:"reference/Files/stage__instance_8cpp",id:"reference/Files/stage__instance_8cpp",title:"sleepy_discord/stage_instance.cpp",description:"Namespaces",source:"@site/docs/reference/Files/stage__instance_8cpp.md",sourceDirName:"reference/Files",slug:"/reference/Files/stage__instance_8cpp",permalink:"/sleepy-discord/docs/reference/Files/stage__instance_8cpp",tags:[],version:"current",frontMatter:{title:"sleepy_discord/stage_instance.cpp"},sidebar:"Reference",previous:{title:"include/sleepy_discord/snowflake.h",permalink:"/sleepy-discord/docs/reference/Files/snowflake_8h"},next:{title:"include/sleepy_discord/stage_instance.h",permalink:"/sleepy-discord/docs/reference/Files/stage__instance_8h"}},p=[{value:"Namespaces",id:"namespaces",children:[],level:2},{value:"Source code",id:"source-code",children:[],level:2}],u={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"namespaces"},"Namespaces"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),(0,c.kt)("h2",{id:"source-code"},"Source code"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "stage_instance.h"\n\nnamespace SleepyDiscord {\n    StageInstance::StageInstance(const json::Value& json) :\n        StageInstance(json::fromJSON<StageInstance>(json)) {\n    }\n}\n')),(0,c.kt)("hr",null),(0,c.kt)("p",null,"Updated on 16 January 2022 at 23:41:20 UTC"))}d.isMDXComponent=!0}}]);