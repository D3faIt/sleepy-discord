(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{198:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return b})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return o}));var n=r(3),a=r(7),c=(r(0),r(370)),b={title:"SleepyDiscord::Overwrite"},i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_overwrite",id:"reference/Classes/struct_sleepy_discord_1_1_overwrite",isDocsHomePage:!1,title:"SleepyDiscord::Overwrite",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_overwrite.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_overwrite",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_overwrite",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::OutputQueue",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_output_queue"},next:{title:"SleepyDiscord::Part",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_part"}},l=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum Type",id:"enum-type",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Overwrite",id:"function-overwrite",children:[]},{value:"function Overwrite",id:"function-overwrite-1",children:[]},{value:"function Overwrite",id:"function-overwrite-2",children:[]},{value:"function ~Overwrite",id:"function-overwrite-3",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable type",id:"variable-type",children:[]},{value:"variable allow",id:"variable-allow",children:[]},{value:"variable deny",id:"variable-deny",children:[]}]}],s={toc:l};function o(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Inherits from ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Overwrite >"),", ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(c.b)("h2",{id:"inherited-members"},"inherited members"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Types inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Overwrite >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"using ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived >"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#using-parent"},"Parent")))))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Overwrite >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"() =default")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"(",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > id)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator-snowflake%3C-derived-%3E-&"},"operator Snowflake< Derived > &")),"()")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-empty"},"empty")),"() const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"void"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-merge"},"merge")),"(Derived & changes)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",Object(c.b)("br",null),"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",Object(c.b)("br",null),"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const Time"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-gettimestamp"},"getTimestamp")),"()")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Attributes inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Overwrite >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived >"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#variable-id"},"ID")))))),Object(c.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(c.b)("h3",{id:"enum-type"},"enum Type"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Enumerator"),Object(c.b)("th",{parentName:"tr",align:null},"Value"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"TYPE_NONE"),Object(c.b)("td",{parentName:"tr",align:null},"-400"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"role"),Object(c.b)("td",{parentName:"tr",align:null},"0"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"member"),Object(c.b)("td",{parentName:"tr",align:null},"1"),Object(c.b)("td",{parentName:"tr",align:null})))),Object(c.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(c.b)("h3",{id:"function-overwrite"},"function Overwrite"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Overwrite() =default\n")),Object(c.b)("h3",{id:"function-overwrite-1"},"function Overwrite"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Overwrite(\n    const json::Value & rawJSON\n)\n")),Object(c.b)("h3",{id:"function-overwrite-2"},"function Overwrite"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Overwrite(\n    const nonstd::string_view & rawJSON\n)\n")),Object(c.b)("h3",{id:"function-overwrite-3"},"function ~Overwrite"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline ~Overwrite()\n")),Object(c.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair< json::EnumTypeHelper > &::, "", ::REQUIRIED_FIELD ,\n    json::pair< UInt64StrTypeHelper > &::, "", ::REQUIRIED_FIELD ,\n    json::pair< UInt64StrTypeHelper > &::, "", ::REQUIRIED_FIELD \n)\n')),Object(c.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(c.b)("h3",{id:"variable-type"},"variable type"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Type type;\n")),Object(c.b)("h3",{id:"variable-allow"},"variable allow"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Permission allow = Permission::NONE;\n")),Object(c.b)("h3",{id:"variable-deny"},"variable deny"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Permission deny = Permission::NONE;\n")),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on 13 May 2021 at 02:57:27 UTC"))}o.isMDXComponent=!0},370:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return _}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function b(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?b(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),o=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=o(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,b=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=o(r),u=n,_=d["".concat(b,".").concat(u)]||d[u]||p[u]||c;return r?a.a.createElement(_,i(i({ref:t},s),{},{components:r})):a.a.createElement(_,i({ref:t},s))}));function _(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,b=new Array(c);b[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,b[1]=i;for(var s=2;s<c;s++)b[s]=r[s];return a.a.createElement.apply(null,b)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);