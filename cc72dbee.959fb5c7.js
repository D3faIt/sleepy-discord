(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{312:function(e,a,r){"use strict";r.r(a),r.d(a,"frontMatter",(function(){return i})),r.d(a,"metadata",(function(){return c})),r.d(a,"toc",(function(){return b})),r.d(a,"default",(function(){return o}));var n=r(3),t=r(7),l=(r(0),r(393)),i={title:"SleepyDiscord::Server"},c={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_server",id:"reference/Classes/struct_sleepy_discord_1_1_server",isDocsHomePage:!1,title:"SleepyDiscord::Server",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_server.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_server",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::SendMessageParams",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_send_message_params"},next:{title:"SleepyDiscord::ServerAppCommandPermissions",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server_app_command_permissions"}},b=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ~Server",id:"function-server",children:[]},{value:"function Server",id:"function-server-1",children:[]},{value:"function Server",id:"function-server-2",children:[]},{value:"function Server",id:"function-server-3",children:[]},{value:"function findMember",id:"function-findmember",children:[]},{value:"function findChannel",id:"function-findchannel",children:[]},{value:"function findRole",id:"function-findrole",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable name",id:"variable-name",children:[]},{value:"variable icon",id:"variable-icon",children:[]},{value:"variable splash",id:"variable-splash",children:[]},{value:"variable discoverySplash",id:"variable-discoverysplash",children:[]},{value:"variable ownerID",id:"variable-ownerid",children:[]},{value:"variable permissions",id:"variable-permissions",children:[]},{value:"variable region",id:"variable-region",children:[]},{value:"variable AFKchannelID",id:"variable-afkchannelid",children:[]},{value:"variable AFKTimeout",id:"variable-afktimeout",children:[]},{value:"variable embedEnable",id:"variable-embedenable",children:[]},{value:"variable embedChannelID",id:"variable-embedchannelid",children:[]},{value:"variable verificationLevel",id:"variable-verificationlevel",children:[]},{value:"variable defaultMessageNotifications",id:"variable-defaultmessagenotifications",children:[]},{value:"variable explicitContentFilter",id:"variable-explicitcontentfilter",children:[]},{value:"variable roles",id:"variable-roles",children:[]},{value:"variable voiceStates",id:"variable-voicestates",children:[]},{value:"variable features",id:"variable-features",children:[]},{value:"variable unavailable",id:"variable-unavailable",children:[]},{value:"variable stageInstances",id:"variable-stageinstances",children:[]},{value:"variable applicationID",id:"variable-applicationid",children:[]},{value:"variable systemChannelID",id:"variable-systemchannelid",children:[]},{value:"variable systemChannelFlags",id:"variable-systemchannelflags",children:[]},{value:"variable rulesChannelID",id:"variable-ruleschannelid",children:[]},{value:"variable MFALevel",id:"variable-mfalevel",children:[]},{value:"variable joinedAt",id:"variable-joinedat",children:[]},{value:"variable maxMembers",id:"variable-maxmembers",children:[]},{value:"variable vanityUrlCode",id:"variable-vanityurlcode",children:[]},{value:"variable description",id:"variable-description",children:[]},{value:"variable banner",id:"variable-banner",children:[]},{value:"variable premiumTier",id:"variable-premiumtier",children:[]},{value:"variable premiumSubscriptionCount",id:"variable-premiumsubscriptioncount",children:[]},{value:"variable preferredLocale",id:"variable-preferredlocale",children:[]},{value:"variable publicUpdatesChannelID",id:"variable-publicupdateschannelid",children:[]},{value:"variable maxVideoChannelUsers",id:"variable-maxvideochannelusers",children:[]},{value:"variable approximateMemberCount",id:"variable-approximatemembercount",children:[]},{value:"variable approximatePresenceCount",id:"variable-approximatepresencecount",children:[]},{value:"variable nsfwLevel",id:"variable-nsfwlevel",children:[]},{value:"variable large",id:"variable-large",children:[]},{value:"variable memberCount",id:"variable-membercount",children:[]},{value:"variable members",id:"variable-members",children:[]},{value:"variable channels",id:"variable-channels",children:[]}]}],s={toc:b};function o(e){var a=e.components,r=Object(t.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,r,{components:a,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Inherits from ",Object(l.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"),", ",Object(l.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(l.b)("h2",{id:"inherited-members"},"inherited members"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Public Types inherited from ",Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"))),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null}),Object(l.b)("th",{parentName:"tr",align:null},"Name"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"using ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived >"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#using-parent"},"Parent")))))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"))),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null}),Object(l.b)("th",{parentName:"tr",align:null},"Name"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"() =default")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"(",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > id)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator-snowflake%3C-derived-%3E-&"},"operator Snowflake< Derived > &")),"()")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-empty"},"empty")),"() const")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"void"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-merge"},"merge")),"(Derived & changes)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",Object(l.b)("br",null),"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",Object(l.b)("br",null),"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"const Time"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-gettimestamp"},"getTimestamp")),"()")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Public Attributes inherited from ",Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"))),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null}),Object(l.b)("th",{parentName:"tr",align:null},"Name"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived >"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#variable-id"},"ID")))))),Object(l.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(l.b)("h3",{id:"function-server"},"function ~Server"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"~Server() =default\n")),Object(l.b)("h3",{id:"function-server-1"},"function Server"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Server() =default\n")),Object(l.b)("h3",{id:"function-server-2"},"function Server"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"inline Server(\n    const nonstd::string_view & json\n)\n")),Object(l.b)("h3",{id:"function-server-3"},"function Server"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Server(\n    const json::Value & json\n)\n")),Object(l.b)("h3",{id:"function-findmember"},"function findMember"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::list< ServerMember >::iterator findMember(\n    const Snowflake< User > userID\n)\n")),Object(l.b)("h3",{id:"function-findchannel"},"function findChannel"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::list< Channel >::iterator findChannel(\n    const Snowflake< Channel > channelID\n)\n")),Object(l.b)("h3",{id:"function-findrole"},"function findRole"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::list< Role >::iterator findRole(\n    const Snowflake< Role > roleID\n)\n")),Object(l.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair &::, "", ::NULLABLE_FIELD ,\n    json::pair &::, "", ::NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< UInt64StrTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),Object(l.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(l.b)("h3",{id:"variable-name"},"variable name"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string name;\n")),Object(l.b)("h3",{id:"variable-icon"},"variable icon"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string icon;\n")),Object(l.b)("h3",{id:"variable-splash"},"variable splash"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string splash;\n")),Object(l.b)("h3",{id:"variable-discoverysplash"},"variable discoverySplash"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string discoverySplash;\n")),Object(l.b)("h3",{id:"variable-ownerid"},"variable ownerID"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< User > ownerID;\n")),Object(l.b)("h3",{id:"variable-permissions"},"variable permissions"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Permission permissions;\n")),Object(l.b)("h3",{id:"variable-region"},"variable region"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string region;\n")),Object(l.b)("h3",{id:"variable-afkchannelid"},"variable AFKchannelID"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string AFKchannelID;\n")),Object(l.b)("h3",{id:"variable-afktimeout"},"variable AFKTimeout"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int AFKTimeout;\n")),Object(l.b)("h3",{id:"variable-embedenable"},"variable embedEnable"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"bool embedEnable;\n")),Object(l.b)("h3",{id:"variable-embedchannelid"},"variable embedChannelID"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string embedChannelID;\n")),Object(l.b)("h3",{id:"variable-verificationlevel"},"variable verificationLevel"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int verificationLevel;\n")),Object(l.b)("h3",{id:"variable-defaultmessagenotifications"},"variable defaultMessageNotifications"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int defaultMessageNotifications;\n")),Object(l.b)("h3",{id:"variable-explicitcontentfilter"},"variable explicitContentFilter"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int explicitContentFilter;\n")),Object(l.b)("h3",{id:"variable-roles"},"variable roles"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::list< Role > roles;\n")),Object(l.b)("h3",{id:"variable-voicestates"},"variable voiceStates"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::list< VoiceState > voiceStates;\n")),Object(l.b)("h3",{id:"variable-features"},"variable features"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< std::string > features;\n")),Object(l.b)("h3",{id:"variable-unavailable"},"variable unavailable"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"bool unavailable;\n")),Object(l.b)("h3",{id:"variable-stageinstances"},"variable stageInstances"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< StageInstance > stageInstances;\n")),Object(l.b)("h3",{id:"variable-applicationid"},"variable applicationID"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< DiscordObject > applicationID;\n")),Object(l.b)("h3",{id:"variable-systemchannelid"},"variable systemChannelID"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > systemChannelID;\n")),Object(l.b)("h3",{id:"variable-systemchannelflags"},"variable systemChannelFlags"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int systemChannelFlags;\n")),Object(l.b)("h3",{id:"variable-ruleschannelid"},"variable rulesChannelID"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > rulesChannelID;\n")),Object(l.b)("h3",{id:"variable-mfalevel"},"variable MFALevel"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int MFALevel;\n")),Object(l.b)("h3",{id:"variable-joinedat"},"variable joinedAt"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string joinedAt;\n")),Object(l.b)("h3",{id:"variable-maxmembers"},"variable maxMembers"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int maxMembers = 0;\n")),Object(l.b)("h3",{id:"variable-vanityurlcode"},"variable vanityUrlCode"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string vanityUrlCode;\n")),Object(l.b)("h3",{id:"variable-description"},"variable description"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string description;\n")),Object(l.b)("h3",{id:"variable-banner"},"variable banner"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string banner;\n")),Object(l.b)("h3",{id:"variable-premiumtier"},"variable premiumTier"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int premiumTier = 0;\n")),Object(l.b)("h3",{id:"variable-premiumsubscriptioncount"},"variable premiumSubscriptionCount"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int premiumSubscriptionCount = 0;\n")),Object(l.b)("h3",{id:"variable-preferredlocale"},"variable preferredLocale"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::string preferredLocale;\n")),Object(l.b)("h3",{id:"variable-publicupdateschannelid"},"variable publicUpdatesChannelID"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > publicUpdatesChannelID;\n")),Object(l.b)("h3",{id:"variable-maxvideochannelusers"},"variable maxVideoChannelUsers"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int maxVideoChannelUsers;\n")),Object(l.b)("h3",{id:"variable-approximatemembercount"},"variable approximateMemberCount"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int approximateMemberCount;\n")),Object(l.b)("h3",{id:"variable-approximatepresencecount"},"variable approximatePresenceCount"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int approximatePresenceCount;\n")),Object(l.b)("h3",{id:"variable-nsfwlevel"},"variable nsfwLevel"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int nsfwLevel = 0;\n")),Object(l.b)("h3",{id:"variable-large"},"variable large"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"bool large;\n")),Object(l.b)("h3",{id:"variable-membercount"},"variable memberCount"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int memberCount = 0;\n")),Object(l.b)("h3",{id:"variable-members"},"variable members"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::list< ServerMember > members;\n")),Object(l.b)("h3",{id:"variable-channels"},"variable channels"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"std::list< Channel > channels;\n")),Object(l.b)("hr",null),Object(l.b)("p",null,"Updated on 26 November 2021 at 21:27:14 UTC"))}o.isMDXComponent=!0},393:function(e,a,r){"use strict";r.d(a,"a",(function(){return d})),r.d(a,"b",(function(){return m}));var n=r(0),t=r.n(n);function l(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){l(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function b(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var s=t.a.createContext({}),o=function(e){var a=t.a.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):c(c({},a),e)),r},d=function(e){var a=o(e.components);return t.a.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.a.createElement(t.a.Fragment,{},a)}},u=t.a.forwardRef((function(e,a){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),d=o(r),u=n,m=d["".concat(i,".").concat(u)]||d[u]||p[u]||l;return r?t.a.createElement(m,c(c({ref:a},s),{},{components:r})):t.a.createElement(m,c({ref:a},s))}));function m(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=u;var c={};for(var b in a)hasOwnProperty.call(a,b)&&(c[b]=a[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<l;s++)i[s]=r[s];return t.a.createElement.apply(null,i)}return t.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);