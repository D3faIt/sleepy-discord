(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{200:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return p}));var a=t(3),r=t(7),c=(t(0),t(393)),s={title:"include/sleepy_discord/stage_instance.h"},o={unversionedId:"reference/Files/stage__instance_8h",id:"reference/Files/stage__instance_8h",isDocsHomePage:!1,title:"include/sleepy_discord/stage_instance.h",description:"Namespaces",source:"@site/docs/reference/Files/stage__instance_8h.md",slug:"/reference/Files/stage__instance_8h",permalink:"/sleepy-discord/docs/reference/Files/stage__instance_8h",version:"current",sidebar:"Reference",previous:{title:"sleepy_discord/stage_instance.cpp",permalink:"/sleepy-discord/docs/reference/Files/stage__instance_8cpp"},next:{title:"include/sleepy_discord/standard_config.h",permalink:"/sleepy-discord/docs/reference/Files/standard__config_8h"}},i=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Source code",id:"source-code",children:[]}],l={toc:i};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"namespaces"},"Namespaces"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),Object(c.b)("h2",{id:"classes"},"Classes"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"struct"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_stage_instance"},"SleepyDiscord::StageInstance")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"struct"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_get_default_3_01_stage_instance_1_1_privacy_level_01_4"},"SleepyDiscord::GetDefault< StageInstance::PrivacyLevel >")))))),Object(c.b)("h2",{id:"source-code"},"Source code"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#include "discord_object_interface.h"\n#include "server.h"\n\nnamespace SleepyDiscord {\n    struct StageInstance : IdentifiableDiscordObject<StageInstance> {\n        StageInstance() = default;\n        ~StageInstance() = default;\n        StageInstance(const json::Value & json);\n        StageInstance(const nonstd::string_view& json) :\n            StageInstance(json::fromJSON<StageInstance>(json)) {}\n\n        Snowflake<Server> serverID;\n        Snowflake<Channel> channelID;\n        std::string topic;\n        using PrivacyLevelRaw = int;\n        enum class PrivacyLevel : PrivacyLevelRaw {\n            NotSet = -1, //made up for the library\n            PUBLIC = 1,\n            SERVER_ONLY = 2\n        };\n        PrivacyLevel privacyLevel = PrivacyLevel::NotSet;\n        bool discoverableDisabled = false;\n\n        JSONStructStart\n            std::make_tuple(\n                json::pair                      (&StageInstance::ID                  , "id"                   , json::REQUIRIED_FIELD),\n                json::pair                      (&StageInstance::serverID            , "guild_id"             , json::REQUIRIED_FIELD),\n                json::pair                      (&StageInstance::channelID           , "channel_id"           , json::REQUIRIED_FIELD),\n                json::pair                      (&StageInstance::topic               , "topic"                , json::OPTIONAL_FIELD ),\n                json::pair<json::EnumTypeHelper>(&StageInstance::privacyLevel        , "privacy_level"        , json::OPTIONAL_FIELD ),\n                json::pair                      (&StageInstance::discoverableDisabled, "discoverable_disabled", json::OPTIONAL_FIELD )\n            );\n        JSONStructEnd\n    };\n\n    template<>\n    struct GetDefault<StageInstance::PrivacyLevel> {\n        static inline const StageInstance::PrivacyLevel get() {\n            return StageInstance::PrivacyLevel::NotSet;\n        }\n    };\n}\n')),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on 26 November 2021 at 21:27:14 UTC"))}p.isMDXComponent=!0},393:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(t),u=a,m=d["".concat(s,".").concat(u)]||d[u]||b[u]||c;return t?r.a.createElement(m,o(o({ref:n},l),{},{components:t})):r.a.createElement(m,o({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,s=new Array(c);s[0]=u;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<c;l++)s[l]=t[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);