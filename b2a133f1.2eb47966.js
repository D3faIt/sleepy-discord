(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{274:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return o})),r.d(t,"default",(function(){return b}));var a=r(3),n=r(7),s=(r(0),r(383)),c={title:"SleepyDiscord::EditMessageParams"},l={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_edit_message_params",id:"reference/Classes/struct_sleepy_discord_1_1_edit_message_params",isDocsHomePage:!1,title:"SleepyDiscord::EditMessageParams",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_edit_message_params.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_edit_message_params",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_message_params",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::Connection",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_connection"},next:{title:"SleepyDiscord::EditWebhookParams",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params"}},o=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function std::tuple_cat",id:"function-stdtuple_cat",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable messageID",id:"variable-messageid",children:[]},{value:"variable flags",id:"variable-flags",children:[]},{value:"variable attachments",id:"variable-attachments",children:[]}]}],i={toc:o};function b(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},i,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Inherits from ",Object(s.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< EditMessageParams >"),", ",Object(s.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(s.b)("h2",{id:"inherited-members"},"inherited members"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< EditMessageParams >"))),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null}),Object(s.b)("th",{parentName:"tr",align:null},"Name"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"JSONStructStart"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#function-stdmake_tuple"},"std::make_tuple")),'(json::pair &::, "", ::OPTIONAL_FIELD , json::pair &::, "", ::OPTIONAL_FIELD , json::pair &::, "", ::OPTIONAL_FIELD , json::pair< ',Object(s.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_container_type_helper"},"json::ContainerTypeHelper"),' > &::, "", ::OPTIONAL_FIELD )')))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Public Attributes inherited from ",Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< EditMessageParams >"))),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null}),Object(s.b)("th",{parentName:"tr",align:null},"Name"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",Object(s.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_channel"},"Channel")," >"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-channelid"},"channelID")))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"std::string"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-content"},"content")))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_embed"},"Embed")),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-embed"},"embed")))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions"},"AllowedMentions")),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-allowedmentions"},"allowedMentions")))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"std::vector< std::shared_ptr< ",Object(s.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"BaseComponent")," > >"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-components"},"components")))))),Object(s.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(s.b)("h3",{id:"function-stdtuple_cat"},"function std::tuple_cat"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::tuple_cat(\n    MessageParams< EditMessageParams >::JSONStruct ,\n    std::make_tuple(json::pair< json::EnumTypeHelper >(&EditMessageParams::flags, "flags", json::OPTIONAL_FIELD), json::pair< json::ContainerTypeHelper >(&EditMessageParams::attachments, "attachments", json::OPTIONAL_FIELD)) \n)\n')),Object(s.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(s.b)("h3",{id:"variable-messageid"},"variable messageID"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Message > messageID;\n")),Object(s.b)("h3",{id:"variable-flags"},"variable flags"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"Message::Flags flags = Message::Flags::DEFAULT;\n")),Object(s.b)("h3",{id:"variable-attachments"},"variable attachments"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Attachment > attachments;\n")),Object(s.b)("hr",null),Object(s.b)("p",null,"Updated on  4 September 2021 at 02:04:50 UTC"))}b.isMDXComponent=!0},383:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return u}));var a=r(0),n=r.n(a);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=n.a.createContext({}),b=function(e){var t=n.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=b(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),d=b(r),m=a,u=d["".concat(c,".").concat(m)]||d[m]||p[m]||s;return r?n.a.createElement(u,l(l({ref:t},i),{},{components:r})):n.a.createElement(u,l({ref:t},i))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,c=new Array(s);c[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var i=2;i<s;i++)c[i]=r[i];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);