(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{361:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(3),c=t(7),a=(t(0),t(393)),o={title:"SleepyDiscord::Interaction::Response"},i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",id:"reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",isDocsHomePage:!1,title:"SleepyDiscord::Interaction::Response",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::Interaction",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction"},next:{title:"SleepyDiscord::InteractionAppCommandCallbackData",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_app_command_callback_data"}},s=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Type",id:"using-type",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Response",id:"function-response",children:[]},{value:"function Response",id:"function-response-1",children:[]},{value:"function Response",id:"function-response-2",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable type",id:"variable-type",children:[]},{value:"variable data",id:"variable-data",children:[]}]}],p={toc:s};function l(e){var n=e.components,t=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Inherits from ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(a.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(a.b)("h3",{id:"using-type"},"using Type"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::Interaction::Response::Type =  CallbackType;\n")),Object(a.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(a.b)("h3",{id:"function-response"},"function Response"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"Response() =default\n")),Object(a.b)("h3",{id:"function-response-1"},"function Response"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"Response(\n    json::Value & json\n)\n")),Object(a.b)("h3",{id:"function-response-2"},"function Response"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Response(\n    const nonstd::string_view & json\n)\n")),Object(a.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair< json::EnumTypeHelper > &::::, "", ::REQUIRIED_FIELD ,\n    json::pair &::::, "", ::OPTIONAL_FIELD \n)\n')),Object(a.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(a.b)("h3",{id:"variable-type"},"variable type"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"Type type;\n")),Object(a.b)("h3",{id:"variable-data"},"variable data"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"InteractionAppCommandCallbackData data;\n")),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on 26 November 2021 at 18:07:03 UTC"))}l.isMDXComponent=!0},393:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),c=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var p=c.a.createContext({}),l=function(e){var n=c.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return c.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},b=c.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),b=r,f=u["".concat(o,".").concat(b)]||u[b]||d[b]||a;return t?c.a.createElement(f,i(i({ref:n},p),{},{components:t})):c.a.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=b;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<a;p++)o[p]=t[p];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);