(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{299:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),i=(n(0),n(381)),c={title:"SleepyDiscord::Embed"},l={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_embed",id:"reference/Classes/struct_sleepy_discord_1_1_embed",isDocsHomePage:!1,title:"SleepyDiscord::Embed",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_embed.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_embed",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_embed",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::EditWebhookParams",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_edit_webhook_params"},next:{title:"SleepyDiscord::EmbedAuthor",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_embed_author"}},b=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum Flag",id:"enum-flag",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Embed",id:"function-embed",children:[]},{value:"function Embed",id:"function-embed-1",children:[]},{value:"function Embed",id:"function-embed-2",children:[]},{value:"function Embed",id:"function-embed-3",children:[]},{value:"function empty",id:"function-empty",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable title",id:"variable-title",children:[]},{value:"variable type",id:"variable-type",children:[]},{value:"variable description",id:"variable-description",children:[]},{value:"variable url",id:"variable-url",children:[]},{value:"variable timestamp",id:"variable-timestamp",children:[]},{value:"variable color",id:"variable-color",children:[]},{value:"variable footer",id:"variable-footer",children:[]},{value:"variable image",id:"variable-image",children:[]},{value:"variable thumbnail",id:"variable-thumbnail",children:[]},{value:"variable video",id:"variable-video",children:[]},{value:"variable provider",id:"variable-provider",children:[]},{value:"variable author",id:"variable-author",children:[]},{value:"variable fields",id:"variable-fields",children:[]}]}],o={toc:b};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Inherits from ",Object(i.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(i.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(i.b)("h3",{id:"enum-flag"},"enum Flag"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Enumerator"),Object(i.b)("th",{parentName:"tr",align:null},"Value"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"INVALID_EMBED"),Object(i.b)("td",{parentName:"tr",align:null},"0"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"VALID_EMBED"),Object(i.b)("td",{parentName:"tr",align:null},"1"),Object(i.b)("td",{parentName:"tr",align:null})))),Object(i.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(i.b)("h3",{id:"function-embed"},"function Embed"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Embed() =default\n")),Object(i.b)("h3",{id:"function-embed-1"},"function Embed"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Embed(\n    const json::Value & json\n)\n")),Object(i.b)("h3",{id:"function-embed-2"},"function Embed"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Embed(\n    const nonstd::string_view & json\n)\n")),Object(i.b)("h3",{id:"function-embed-3"},"function Embed"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline Embed(\n    const Flag f\n)\n")),Object(i.b)("h3",{id:"function-empty"},"function empty"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool empty() const\n")),Object(i.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair<-1 > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),Object(i.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(i.b)("h3",{id:"variable-title"},"variable title"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string title;\n")),Object(i.b)("h3",{id:"variable-type"},"variable type"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string type;\n")),Object(i.b)("h3",{id:"variable-description"},"variable description"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string description;\n")),Object(i.b)("h3",{id:"variable-url"},"variable url"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string url;\n")),Object(i.b)("h3",{id:"variable-timestamp"},"variable timestamp"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string timestamp;\n")),Object(i.b)("h3",{id:"variable-color"},"variable color"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"int32_t color = -1;\n")),Object(i.b)("h3",{id:"variable-footer"},"variable footer"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedFooter footer;\n")),Object(i.b)("h3",{id:"variable-image"},"variable image"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedImage image;\n")),Object(i.b)("h3",{id:"variable-thumbnail"},"variable thumbnail"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedThumbnail thumbnail;\n")),Object(i.b)("h3",{id:"variable-video"},"variable video"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedVideo video;\n")),Object(i.b)("h3",{id:"variable-provider"},"variable provider"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedProvider provider;\n")),Object(i.b)("h3",{id:"variable-author"},"variable author"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedAuthor author;\n")),Object(i.b)("h3",{id:"variable-fields"},"variable fields"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< EmbedField > fields;\n")),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on  5 June 2021 at 05:54:14 UTC"))}d.isMDXComponent=!0},381:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),d=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),p=d(n),s=a,m=p["".concat(c,".").concat(s)]||p[s]||u[s]||i;return n?r.a.createElement(m,l(l({ref:t},o),{},{components:n})):r.a.createElement(m,l({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=s;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var o=2;o<i;o++)c[o]=n[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);