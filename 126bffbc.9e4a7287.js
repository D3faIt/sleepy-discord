(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{381:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return y}));var r=n(0),c=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=c.a.createContext({}),s=function(e){var t=c.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},f=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(n),f=r,y=u["".concat(i,".").concat(f)]||u[f]||d[f]||o;return n?c.a.createElement(y,a(a({ref:t},l),{},{components:n})):c.a.createElement(y,a({ref:t},l))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var l=2;l<o;l++)i[l]=n[l];return c.a.createElement.apply(null,i)}return c.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},92:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n(3),c=n(7),o=(n(0),n(381)),i={title:"SleepyDiscord::UInt64StrTypeHelper"},a={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_u_int64_str_type_helper",id:"reference/Classes/struct_sleepy_discord_1_1_u_int64_str_type_helper",isDocsHomePage:!1,title:"SleepyDiscord::UInt64StrTypeHelper",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_u_int64_str_type_helper.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_u_int64_str_type_helper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_u_int64_str_type_helper",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::Timer",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_timer"},next:{title:"SleepyDiscord::UnavailableServer",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_unavailable_server"}},p=[{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function toType",id:"function-totype",children:[]},{value:"function fromType",id:"function-fromtype",children:[]},{value:"function empty",id:"function-empty",children:[]},{value:"function isType",id:"function-istype",children:[]}]}],l={toc:p};function s(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null," ",Object(o.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(o.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\nstruct SleepyDiscord::UInt64StrTypeHelper;\n")),Object(o.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(o.b)("h3",{id:"function-totype"},"function toType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline Permission toType(\n    const json::Value & value\n)\n")),Object(o.b)("h3",{id:"function-fromtype"},"function fromType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline json::Value fromType(\n    const Type & value,\n    json::Value::AllocatorType & \n)\n")),Object(o.b)("h3",{id:"function-empty"},"function empty"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline bool empty(\n    const Type & value\n)\n")),Object(o.b)("h3",{id:"function-istype"},"function isType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline bool isType(\n    const json::Value & value\n)\n")),Object(o.b)("hr",null),Object(o.b)("p",null,"Updated on 23 June 2021 at 22:41:44 UTC"))}s.isMDXComponent=!0}}]);