(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{118:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),c=(n(0),n(381)),o={title:"SleepyDiscord::ActionRow"},s={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_action_row",id:"reference/Classes/struct_sleepy_discord_1_1_action_row",isDocsHomePage:!1,title:"SleepyDiscord::ActionRow",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_action_row.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_action_row",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_action_row",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::ZLibCompression",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_z_lib_compression"},next:{title:"SleepyDiscord::Activity",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_activity"}},p=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ActionRow",id:"function-actionrow",children:[]},{value:"function ~ActionRow",id:"function-actionrow-1",children:[]},{value:"function ActionRow",id:"function-actionrow-2",children:[]},{value:"function ActionRow",id:"function-actionrow-3",children:[]},{value:"function std::tuple_cat",id:"function-stdtuple_cat",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable componentType",id:"variable-componenttype",children:[]},{value:"variable components",id:"variable-components",children:[]}]}],b={toc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Inherits from ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp"},"SleepyDiscord::ComponentTemp< ActionRow >"),", ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"),", ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(c.b)("h2",{id:"inherited-members"},"inherited members"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp"},"SleepyDiscord::ComponentTemp< ActionRow >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-componenttemp"},"ComponentTemp")),"()")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-~componenttemp"},"~ComponentTemp")),"() =default")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-operator-jsonvalue"},"operator json::Value")),"()")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-operator-rawcomponent"},"operator RawComponent")),"()")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"JSONStructStart"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-stdmake_tuple"},"std::make_tuple")),"(json::pair< ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper"},"json::EnumTypeHelper"),' > &::, "", ::REQUIRIED_FIELD )')))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Types inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"using ComponentType"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#using-type"},"Type")))))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-basecomponent"},"BaseComponent")),"()")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-basecomponent"},"BaseComponent")),"(Type _type)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-~basecomponent"},"~BaseComponent")),"() =default")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const ComponentType"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-gettype"},"getType")),"() const")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Protected Attributes inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"Type"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#variable-type"},"type")))))),Object(c.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(c.b)("h3",{id:"function-actionrow"},"function ActionRow"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"ActionRow() =default\n")),Object(c.b)("h3",{id:"function-actionrow-1"},"function ~ActionRow"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"~ActionRow() =default\n")),Object(c.b)("h3",{id:"function-actionrow-2"},"function ActionRow"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"ActionRow(\n    json::Value & json\n)\n")),Object(c.b)("h3",{id:"function-actionrow-3"},"function ActionRow"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"ActionRow(\n    const nonstd::string_view & json\n)\n")),Object(c.b)("h3",{id:"function-stdtuple_cat"},"function std::tuple_cat"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::tuple_cat(\n    ComponentTemp< ActionRow >::JSONStruct ,\n    std::make_tuple(json::pair< json::ContainerTypeHelper >(&ActionRow::components, "components", json::OPTIONAL_FIELD)) \n)\n')),Object(c.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(c.b)("h3",{id:"variable-componenttype"},"variable componentType"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"static const ComponentType componentType = ComponentType::ActionRow;\n")),Object(c.b)("h3",{id:"variable-components"},"variable components"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< std::shared_ptr< BaseComponent > > components;\n")),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on 23 June 2021 at 01:57:45 UTC"))}l.isMDXComponent=!0},381:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),l=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=l(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),i=l(n),m=r,u=i["".concat(o,".").concat(m)]||i[m]||d[m]||c;return n?a.a.createElement(u,s(s({ref:t},b),{},{components:n})):a.a.createElement(u,s({ref:t},b))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var b=2;b<c;b++)o[b]=n[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);