(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{381:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return _}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),p=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,_=b["".concat(o,".").concat(d)]||b[d]||u[d]||c;return n?a.a.createElement(_,s(s({ref:t},i),{},{components:n})):a.a.createElement(_,s({ref:t},i))}));function _(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var i=2;i<c;i++)o[i]=n[i];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),c=(n(0),n(381)),o={title:"SleepyDiscord::AllowMentionsParseHelper"},s={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_allow_mentions_parse_helper",id:"reference/Classes/struct_sleepy_discord_1_1_allow_mentions_parse_helper",isDocsHomePage:!1,title:"SleepyDiscord::AllowMentionsParseHelper",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_allow_mentions_parse_helper.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_allow_mentions_parse_helper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allow_mentions_parse_helper",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::ActivityTimestampTypeHelper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_activity_timestamp_type_helper"},next:{title:"SleepyDiscord::AllowedMentions",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions"}},l=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function empty",id:"function-empty",children:[]}]}],i={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null," ",Object(c.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(c.b)("p",null,"Inherits from ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_to_container_function"},"SleepyDiscord::json::ToContainerFunction< Container, TypeHelper >"),", ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_from_container_function"},"SleepyDiscord::json::FromContainerFunction< Container, TypeHelper >"),", ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_array_function"},"SleepyDiscord::json::IsArrayFunction")),Object(c.b)("h2",{id:"inherited-members"},"inherited members"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_to_container_function"},"SleepyDiscord::json::ToContainerFunction< Container, TypeHelper >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"template <class Value ",">"," ",Object(c.b)("br",null),"Container"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_to_container_function#function-totype"},"toType")),"(Value & value)")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_from_container_function"},"SleepyDiscord::json::FromContainerFunction< Container, TypeHelper >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"Value"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_from_container_function#function-fromtype"},"fromType")),"(const Container & values, Value::AllocatorType & allocator)")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_array_function"},"SleepyDiscord::json::IsArrayFunction"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_array_function#function-istype"},"isType")),"(const Value & value)")))),Object(c.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"template <class Container ,\ntemplate< class... > class TypeHelper>\nstruct SleepyDiscord::AllowMentionsParseHelper;\n")),Object(c.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(c.b)("h3",{id:"function-empty"},"function empty"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"static inline bool empty(\n    const Container & value\n)\n")),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on 20 June 2021 at 01:46:37 UTC"))}p.isMDXComponent=!0}}]);