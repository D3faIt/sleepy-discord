(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{178:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return u})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return s}));var c=t(3),r=t(7),i=(t(0),t(364)),u={title:"SleepyDiscord::OutputQueue"},a={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_output_queue",id:"reference/Classes/struct_sleepy_discord_1_1_output_queue",isDocsHomePage:!1,title:"SleepyDiscord::OutputQueue",description:"Public Types Documentation",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_output_queue.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_output_queue",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_output_queue",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::ObjectResponse",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_object_response"},next:{title:"SleepyDiscord::Overwrite",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_overwrite"}},o=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Data",id:"using-data",children:[]},{value:"using Buffer",id:"using-buffer",children:[]},{value:"using Queue",id:"using-queue",children:[]},{value:"using Iterator",id:"using-iterator",children:[]},{value:"using ConstIterator",id:"using-constiterator",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ~OutputQueue",id:"function-outputqueue",children:[]},{value:"function empty",id:"function-empty",children:[]},{value:"function emplace_back",id:"function-emplace_back",children:[]},{value:"function front",id:"function-front",children:[]},{value:"function back",id:"function-back",children:[]},{value:"function begin",id:"function-begin",children:[]},{value:"function end",id:"function-end",children:[]},{value:"function begin",id:"function-begin-1",children:[]},{value:"function end",id:"function-end-1",children:[]},{value:"function size",id:"function-size",children:[]},{value:"function resize",id:"function-resize",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable chunkSize",id:"variable-chunksize",children:[]},{value:"variable queue",id:"variable-queue",children:[]},{value:"variable _back",id:"variable-_back",children:[]},{value:"variable _size",id:"variable-_size",children:[]}]}],l={toc:o};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(c.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(i.b)("h3",{id:"using-data"},"using Data"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::OutputQueue::Data =  std::array<char, chunkSize>;\n")),Object(i.b)("h3",{id:"using-buffer"},"using Buffer"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::OutputQueue::Buffer =  std::pair<Data, std::size_t>;\n")),Object(i.b)("h3",{id:"using-queue"},"using Queue"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::OutputQueue::Queue =  std::forward_list<Buffer>;\n")),Object(i.b)("h3",{id:"using-iterator"},"using Iterator"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::OutputQueue::Iterator =  std::forward_list<Buffer>::iterator;\n")),Object(i.b)("h3",{id:"using-constiterator"},"using ConstIterator"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::OutputQueue::ConstIterator =  std::forward_list<Buffer>::const_iterator;\n")),Object(i.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(i.b)("h3",{id:"function-outputqueue"},"function ~OutputQueue"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"~OutputQueue() =default\n")),Object(i.b)("h3",{id:"function-empty"},"function empty"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool empty() const\n")),Object(i.b)("h3",{id:"function-emplace_back"},"function emplace_back"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"template <class... Args>\ninline Iterator emplace_back(\n    Args &&... args\n)\n")),Object(i.b)("h3",{id:"function-front"},"function front"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline Buffer & front()\n")),Object(i.b)("h3",{id:"function-back"},"function back"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline Buffer & back()\n")),Object(i.b)("h3",{id:"function-begin"},"function begin"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline Iterator begin()\n")),Object(i.b)("h3",{id:"function-end"},"function end"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline Iterator end()\n")),Object(i.b)("h3",{id:"function-begin-1"},"function begin"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline ConstIterator begin() const\n")),Object(i.b)("h3",{id:"function-end-1"},"function end"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline ConstIterator end() const\n")),Object(i.b)("h3",{id:"function-size"},"function size"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline Queue::size_type size() const\n")),Object(i.b)("h3",{id:"function-resize"},"function resize"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline void resize(\n    Queue::size_type count\n)\n")),Object(i.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(i.b)("h3",{id:"variable-chunksize"},"variable chunkSize"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"static constexpr static size_t chunkSize = 16 * 1024;\n")),Object(i.b)("h3",{id:"variable-queue"},"variable queue"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Queue queue;\n")),Object(i.b)("h3",{id:"variable-_back"},"variable _back"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Iterator _back = queue.before_begin();\n")),Object(i.b)("h3",{id:"variable-_size"},"variable _size"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Queue::size_type _size = 0;\n")),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on 30 April 2021 at 23:39:25 UTC"))}s.isMDXComponent=!0},364:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return f}));var c=t(0),r=t.n(c);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);n&&(c=c.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,c)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,c,r=function(e,n){if(null==e)return{};var t,c,r={},i=Object.keys(e);for(c=0;c<i.length;c++)t=i[c],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(c=0;c<i.length;c++)t=i[c],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),s=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,c=e.mdxType,i=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=s(t),d=c,f=p["".concat(u,".").concat(d)]||p[d]||b[d]||i;return t?r.a.createElement(f,a(a({ref:n},l),{},{components:t})):r.a.createElement(f,a({ref:n},l))}));function f(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var i=t.length,u=new Array(i);u[0]=d;var a={};for(var o in n)hasOwnProperty.call(n,o)&&(a[o]=n[o]);a.originalType=e,a.mdxType="string"==typeof e?e:c,u[1]=a;for(var l=2;l<i;l++)u[l]=t[l];return r.a.createElement.apply(null,u)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);