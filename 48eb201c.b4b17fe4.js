(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{156:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),l=t(7),a=(t(0),t(364)),i={title:"SleepyDiscord::AllowedMentions"},o={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",id:"reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",isDocsHomePage:!1,title:"SleepyDiscord::AllowedMentions",description:"Public Types Documentation",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::AllowMentionsParseHelper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allow_mentions_parse_helper"},next:{title:"SleepyDiscord::AppCommand",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_app_command"}},c=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum MentionReplierFlag",id:"enum-mentionreplierflag",children:[]},{value:"using ParseValueType",id:"using-parsevaluetype",children:[]},{value:"using ParseContainer",id:"using-parsecontainer",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function AllowedMentions",id:"function-allowedmentions",children:[]},{value:"function ~AllowedMentions",id:"function-allowedmentions-1",children:[]},{value:"function AllowedMentions",id:"function-allowedmentions-2",children:[]},{value:"function AllowedMentions",id:"function-allowedmentions-3",children:[]},{value:"function AllowedMentions",id:"function-allowedmentions-4",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]},{value:"function empty",id:"function-empty",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable parse",id:"variable-parse",children:[]},{value:"variable roles",id:"variable-roles",children:[]},{value:"variable users",id:"variable-users",children:[]},{value:"variable repliedUser",id:"variable-replieduser",children:[]}]}],s={toc:c};function u(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(a.b)("h3",{id:"enum-mentionreplierflag"},"enum MentionReplierFlag"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Enumerator"),Object(a.b)("th",{parentName:"tr",align:null},"Value"),Object(a.b)("th",{parentName:"tr",align:null},"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"NotSet"),Object(a.b)("td",{parentName:"tr",align:null},"-2"),Object(a.b)("td",{parentName:"tr",align:null})),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"WillNotMentionReply"),Object(a.b)("td",{parentName:"tr",align:null},"false"),Object(a.b)("td",{parentName:"tr",align:null})),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"MentionReply"),Object(a.b)("td",{parentName:"tr",align:null},"true"),Object(a.b)("td",{parentName:"tr",align:null})))),Object(a.b)("h3",{id:"using-parsevaluetype"},"using ParseValueType"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AllowedMentions::ParseValueType =  std::string;\n")),Object(a.b)("h3",{id:"using-parsecontainer"},"using ParseContainer"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AllowedMentions::ParseContainer =  std::vector<std::string>;\n")),Object(a.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(a.b)("h3",{id:"function-allowedmentions"},"function AllowedMentions"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"AllowedMentions() =default\n")),Object(a.b)("h3",{id:"function-allowedmentions-1"},"function ~AllowedMentions"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"~AllowedMentions() =default\n")),Object(a.b)("h3",{id:"function-allowedmentions-2"},"function AllowedMentions"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline AllowedMentions(\n    int \n)\n")),Object(a.b)("h3",{id:"function-allowedmentions-3"},"function AllowedMentions"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"AllowedMentions(\n    const json::Value & json\n)\n")),Object(a.b)("h3",{id:"function-allowedmentions-4"},"function AllowedMentions"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"AllowedMentions(\n    const nonstd::string_view & json\n)\n")),Object(a.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),Object(a.b)("h3",{id:"function-empty"},"function empty"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline const JSONStructEnd bool empty() const\n")),Object(a.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(a.b)("h3",{id:"variable-parse"},"variable parse"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},'ParseContainer parse = {""};\n')),Object(a.b)("h3",{id:"variable-roles"},"variable roles"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Snowflake< Role > > roles;\n")),Object(a.b)("h3",{id:"variable-users"},"variable users"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Snowflake< User > > users;\n")),Object(a.b)("h3",{id:"variable-replieduser"},"variable repliedUser"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"MentionReplierFlag repliedUser = MentionReplierFlag::NotSet;\n")),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on 30 April 2021 at 23:39:25 UTC"))}u.isMDXComponent=!0},364:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),l=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=l.a.createContext({}),u=function(e){var n=l.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return l.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return l.a.createElement(l.a.Fragment,{},n)}},b=l.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,m=p["".concat(i,".").concat(b)]||p[b]||d[b]||a;return t?l.a.createElement(m,o(o({ref:n},s),{},{components:t})):l.a.createElement(m,o({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<a;s++)i[s]=t[s];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);