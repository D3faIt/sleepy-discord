(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{383:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return y}));var r=t(0),s=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=s.a.createContext({}),l=function(e){var n=s.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return s.a.createElement(i.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},d=s.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),u=l(t),d=r,y=u["".concat(c,".").concat(d)]||u[d]||_[d]||o;return t?s.a.createElement(y,a(a({ref:n},i),{},{components:t})):s.a.createElement(y,a({ref:n},i))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var i=2;i<o;i++)c[i]=t[i];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},84:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return l}));var r=t(3),s=t(7),o=(t(0),t(383)),c={title:"SleepyDiscord::json::ClassTypeHelper< std::shared_ptr< BaseComponent > >"},a={unversionedId:"reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1shared__ptr_3_01_base_component_01_4_01_4",id:"reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1shared__ptr_3_01_base_component_01_4_01_4",isDocsHomePage:!1,title:"SleepyDiscord::json::ClassTypeHelper< std::shared_ptr< BaseComponent > >",description:"Public Types Documentation",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1shared__ptr_3_01_base_component_01_4_01_4.md",slug:"/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1shared__ptr_3_01_base_component_01_4_01_4",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1shared__ptr_3_01_base_component_01_4_01_4",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::json::ClassTypeHelper< nonstd::string_view >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01nonstd_1_1string__view_01_4"},next:{title:"SleepyDiscord::json::ClassTypeHelper< std::string >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1string_01_4"}},p=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Base",id:"using-base",children:[]},{value:"using Type",id:"using-type",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function toType",id:"function-totype",children:[]},{value:"function fromType",id:"function-fromtype",children:[]},{value:"function empty",id:"function-empty",children:[]},{value:"function isType",id:"function-istype",children:[]}]}],i={toc:p};function l(e){var n=e.components,t=Object(s.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(o.b)("h3",{id:"using-base"},"using Base"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::json::ClassTypeHelper< std::shared_ptr< BaseComponent > >::Base =  BaseComponent;\n")),Object(o.b)("h3",{id:"using-type"},"using Type"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::json::ClassTypeHelper< std::shared_ptr< BaseComponent > >::Type =  std::shared_ptr<BaseComponent>;\n")),Object(o.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(o.b)("h3",{id:"function-totype"},"function toType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline Type toType(\n    json::Value & value\n)\n")),Object(o.b)("h3",{id:"function-fromtype"},"function fromType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline json::Value fromType(\n    const Type & value,\n    json::Value::AllocatorType & allocator\n)\n")),Object(o.b)("h3",{id:"function-empty"},"function empty"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline bool empty(\n    const Type & value\n)\n")),Object(o.b)("h3",{id:"function-istype"},"function isType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline bool isType(\n    const json::Value & value\n)\n")),Object(o.b)("hr",null),Object(o.b)("p",null,"Updated on  4 July 2021 at 19:45:48 UTC"))}l.isMDXComponent=!0}}]);